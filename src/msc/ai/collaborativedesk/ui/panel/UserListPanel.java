package msc.ai.collaborativedesk.ui.panel;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import msc.ai.collaborativedesk.core.managers.DeskManager;
import msc.ai.collaborativedesk.core.managers.PanelManager;
import msc.ai.collaborativedesk.model.dao.User;
import msc.ai.collaborativedesk.ui.model.UserListTableModel;
import msc.ai.collaborativedesk.ui.rendere.OnlineRenderer;

/**
 *
 * @author Keshan De Silva
 */
public class UserListPanel extends javax.swing.JPanel implements InternalPanel
{
    private static UserListPanel instance;
    private UserListTableModel tableModel;
    
    private UserListPanel()
    {
        initComponents();
    }
    
    public static UserListPanel getInstance()
    {
        if (instance == null)
        {
            instance = new UserListPanel();
        }
        return instance;
            
    }
    
    @Override
    public void init()
    {
        tableModel = new UserListTableModel();
        userListTable.setModel(tableModel);
        userListTable.getSelectionModel().addListSelectionListener(new ListSelectionListener()
        {
            @Override
            public void valueChanged(ListSelectionEvent event)
            {
                boolean selected = userListTable.getSelectedRow() != -1;
                boolean keyAvailable = false;
                if (selected)
                {
                    User user = tableModel.getUserList().get(userListTable.getSelectedRow());
                    keyAvailable = msc.ai.collaborativedesk.core.managers.SecurityManager.getIntance().isAsymetricKeysAvailable(user);
                }
                
                btnDeleteUser.setEnabled(selected);
                btnGenerateKey.setEnabled(selected && !keyAvailable);
            }
        });
        userListTable.getColumnModel().getColumn(0).setCellRenderer(new OnlineRenderer());     
    }

    @Override
    public void update()
    {
        DeskManager deskManager = DeskManager.getIntance();
        ArrayList<User> userList = deskManager.getUserList();
        tableModel.setUserList(userList);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        userListTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnAddUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        btnGenerateKey = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Team"));

        userListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        jScrollPane1.setViewportView(userListTable);

        btnAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/ai/collaborativedesk/resources/New.png"))); // NOI18N
        btnAddUser.setText("Add User");
        btnAddUser.setMaximumSize(new java.awt.Dimension(120, 25));
        btnAddUser.setMinimumSize(new java.awt.Dimension(120, 25));
        btnAddUser.setPreferredSize(new java.awt.Dimension(120, 25));
        btnAddUser.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/ai/collaborativedesk/resources/delete.png"))); // NOI18N
        btnDeleteUser.setText("Delete User");
        btnDeleteUser.setEnabled(false);
        btnDeleteUser.setMaximumSize(new java.awt.Dimension(120, 25));
        btnDeleteUser.setMinimumSize(new java.awt.Dimension(120, 25));
        btnDeleteUser.setPreferredSize(new java.awt.Dimension(120, 25));
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnGenerateKey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/ai/collaborativedesk/resources/Key.png"))); // NOI18N
        btnGenerateKey.setText("Generate Key");
        btnGenerateKey.setEnabled(false);
        btnGenerateKey.setMaximumSize(new java.awt.Dimension(120, 25));
        btnGenerateKey.setMinimumSize(new java.awt.Dimension(120, 25));
        btnGenerateKey.setPreferredSize(new java.awt.Dimension(120, 25));
        btnGenerateKey.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnGenerateKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerateKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddUserActionPerformed
    {//GEN-HEADEREND:event_btnAddUserActionPerformed
        PanelManager.getInstance().showPanel(PanelManager.InternalPanelID.NEW_USER_PANEL, true, true);
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteUserActionPerformed
    {//GEN-HEADEREND:event_btnDeleteUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnGenerateKeyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnGenerateKeyActionPerformed
    {//GEN-HEADEREND:event_btnGenerateKeyActionPerformed
        int selectedRow = userListTable.getSelectedRow();
        if (selectedRow != -1)
        {
            SwingWorker swingWorker = new SwingWorker()
            {
                @Override
                protected Object doInBackground() throws Exception
                {        
                    User user = tableModel.getUserList().get(selectedRow);
                    boolean generated = msc.ai.collaborativedesk.core.managers.SecurityManager.getIntance().generateAsymetricKeys(user);

                    if (generated)
                    {
                        btnGenerateKey.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "Key Ceneration Complete", "Key Generation", JOptionPane.INFORMATION_MESSAGE);    
                    }
                    
                    return null;
                } 
            };
            swingWorker.execute();
        }
    }//GEN-LAST:event_btnGenerateKeyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnGenerateKey;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable userListTable;
    // End of variables declaration//GEN-END:variables
}
